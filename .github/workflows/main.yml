name: Build Aseprite (Windows)

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.3.5)'
        required: true

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Ninja
        uses: aseprite/get-ninja@main

      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Cache Skia
        uses: actions/cache@v3
        id: skia-cache
        with:
          path: skia
          key: skia-${{ hashFiles('laf/misc/skia-url.sh') }}

      - name: Download Skia
        if: steps.skia-cache.outputs.cache-hit != 'true'
        shell: bash
        run: |
          this_dir=$(cygpath "${{ github.workspace }}")
          skia_url=$(source $this_dir/laf/misc/skia-url.sh | xargs)
          skia_file=$(basename "$skia_url")
          curl -L -o "$skia_file" "$skia_url"
          unzip "$skia_file" -d skia

      - name: Cache build folder
        uses: actions/cache@v3
        id: build-cache
        with:
          path: build
          key: build-${{ github.event.inputs.version }}

      - name: Configure & Build Aseprite
        if: steps.build-cache.outputs.cache-hit != 'true'
        shell: bash
        run: |
          cmake -S . -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=RelWithDebInfo \
            -DLAF_BACKEND=skia \
            -DENABLE_SCRIPTING=on \
            -DENABLE_TESTS=OFF \
            -DSKIA_DIR=$(realpath skia) \
            -DSKIA_LIBRARY_DIR=$(realpath skia/out/Release-x64)
          cmake --build build --target aseprite

      - name: Copy OpenSSL DLLs to build
        shell: powershell
        run: |
          $opensslBin = "C:\Program Files\OpenSSL\bin"
          Copy-Item "$opensslBin\libcrypto-1_1-x64.dll" -Destination build/bin/
          Copy-Item "$opensslBin\libssl-1_1-x64.dll" -Destination build/bin/

      - name: Zip build folder
        shell: powershell
        run: |
          Compress-Archive -Path build/* -DestinationPath aseprite-win-${{ github.event.inputs.version }}.zip -Force

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: Aseprite v${{ github.event.inputs.version }}
          draft: false
          prerelease: false
          files: aseprite-win-${{ github.event.inputs.version }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
